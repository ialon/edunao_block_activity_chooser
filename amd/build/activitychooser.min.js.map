{"version":3,"file":"activitychooser.min.js","sources":["../src/activitychooser.js"],"sourcesContent":["/**\n * A block used as for choosing modules in a course.\n *\n * @module     block_activity_chooser/activitychooser\n * @copyright  2025 Josemaria Bolanos <admin@mako.digital>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport * as Templates from 'core/templates';\nimport Pending from 'core/pending';\n\n// Set up some JS module wide constants that can be added to in the future.\n\n// Tab config options.\nconst ALLACTIVITIESRESOURCES = 0;\nconst ACTIVITIESRESOURCES = 2;\nconst ALLACTIVITIESRESOURCESREC = 3;\nconst ONLYALLREC = 4;\nconst ACTIVITIESRESOURCESREC = 5;\n\n// Module types.\nconst ACTIVITY = 0;\nconst RESOURCE = 1;\n\nlet initialized = false;\n\n/**\n * Set up the activity chooser.\n *\n * @method init\n * @param {Number} courseId Course ID to use later on in fetchModules()\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n */\nexport const init = async (courseId, chooserConfig) => {\n    const pendingPromise = new Pending();\n\n    // Ensure we only add our listeners once.\n    if (initialized) {\n        return;\n    }\n\n    const fetchModuleData = (() => {\n        let innerPromise = null;\n\n        return () => {\n            if (!innerPromise) {\n                innerPromise = new Promise((resolve) => {\n                    resolve(Repository.activityModules(courseId));\n                });\n            }\n\n            return innerPromise;\n        };\n    })();\n\n    // Grab the first section that has a data-sectionid attribute.\n    const caller = document.querySelector('.course-section[data-sectionid]');\n\n    // We want to show the modal instantly but loading whilst waiting for our data.\n    let bodyPromiseResolver;\n    const bodyPromise = new Promise(resolve => {\n        bodyPromiseResolver = resolve;\n    });\n\n    buildBlock(bodyPromise);\n\n    // Now we have a modal we should start fetching data.\n    // If an error occurs while fetching the data, display the error within the modal.\n    const data = await fetchModuleData().catch(async(e) => {\n        const errorTemplateData = {\n            'errormessage': e.message\n        };\n        bodyPromiseResolver(await Templates.render('core_course/local/activitychooser/error', errorTemplateData));\n    });\n\n    // Early return if there is no module data.\n    if (!data) {\n        return;\n    }\n\n    // Apply the section id to all the module instance links.\n    const builtModuleData = sectionIdMapper(data, caller.dataset.sectionid);\n\n    bodyPromiseResolver(await Templates.render(\n        'core_course/activitychooser',\n        templateDataBuilder(builtModuleData, chooserConfig)\n    ));\n\n    initialized = true;\n\n    pendingPromise.resolve();\n};\n\n/**\n * Given the web service data and an ID we want to make a deep copy\n * of the WS data then add on the section ID to the addoption URL\n *\n * @method sectionIdMapper\n * @param {Object} webServiceData Our original data from the Web service call\n * @param {Number} id The ID of the section we need to append to the links\n * @param {Number|null} sectionreturnid The ID of the section return we need to append to the links\n * @param {Number|null} beforemod The ID of the cm we need to append to the links\n * @return {Array} [modules] with URL's built\n */\nconst sectionIdMapper = (webServiceData, id, sectionreturnid, beforemod) => {\n    // We need to take a fresh deep copy of the original data as an object is a reference type.\n    const newData = JSON.parse(JSON.stringify(webServiceData));\n    newData.content_items.forEach((module) => {\n        module.link += '&section=' + id + '&sr=' + (sectionreturnid ?? 0) + '&beforemod=' + (beforemod ?? 0);\n    });\n    return newData.content_items;\n};\n\n/**\n * Given an array of modules we want to figure out where & how to place them into our template object\n *\n * @method templateDataBuilder\n * @param {Array} data our modules to manipulate into a Templatable object\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n * @return {Object} Our built object ready to render out\n */\nconst templateDataBuilder = (data, chooserConfig) => {\n    // Setup of various bits and pieces we need to mutate before throwing it to the wolves.\n    let activities = [];\n    let resources = [];\n    let showAll = true;\n    let showActivities = false;\n    let showResources = false;\n\n    // Tab mode can be the following [All, Resources & Activities, All & Activities & Resources].\n    const tabMode = parseInt(chooserConfig.tabmode);\n\n    // Filter the incoming data to find favourite & recommended modules.\n    const favourites = data.filter(mod => mod.favourite === true);\n    const recommended = data.filter(mod => mod.recommended === true);\n\n    // Whether the activities and resources tabs should be displayed or not.\n    const showActivitiesAndResources = (tabMode) => {\n        const acceptableModes = [\n            ALLACTIVITIESRESOURCES,\n            ALLACTIVITIESRESOURCESREC,\n            ACTIVITIESRESOURCES,\n            ACTIVITIESRESOURCESREC,\n        ];\n\n        return acceptableModes.indexOf(tabMode) !== -1;\n    };\n\n    // These modes need Activity & Resource tabs.\n    if (showActivitiesAndResources(tabMode)) {\n        // Filter the incoming data to find activities then resources.\n        activities = data.filter(mod => mod.archetype === ACTIVITY);\n        resources = data.filter(mod => mod.archetype === RESOURCE);\n        showActivities = true;\n        showResources = true;\n\n        // We want all of the previous information but no 'All' tab.\n        if (tabMode === ACTIVITIESRESOURCES || tabMode === ACTIVITIESRESOURCESREC) {\n            showAll = false;\n        }\n    }\n\n    const recommendedBeforeTabs = [\n        ALLACTIVITIESRESOURCESREC,\n        ONLYALLREC,\n        ACTIVITIESRESOURCESREC,\n    ];\n    // Whether the recommended tab should be displayed before the All/Activities/Resources tabs.\n    const recommendedBeginning = recommendedBeforeTabs.indexOf(tabMode) !== -1;\n\n    // Given the results of the above filters lets figure out what tab to set active.\n    // We have some favourites.\n    const favouritesFirst = !!favourites.length;\n    const recommendedFirst = favouritesFirst === false && recommendedBeginning === true && !!recommended.length;\n    // We are in tabMode 2 without any favourites.\n    const activitiesFirst = showAll === false && favouritesFirst === false && recommendedFirst === false;\n    // We have nothing fallback to show all modules.\n    const fallback = showAll === true && favouritesFirst === false && recommendedFirst === false;\n\n    return {\n        'default': data,\n        showAll: showAll,\n        activities: activities,\n        showActivities: showActivities,\n        activitiesFirst: activitiesFirst,\n        resources: resources,\n        showResources: showResources,\n        favourites: favourites,\n        recommended: recommended,\n        recommendedFirst: recommendedFirst,\n        recommendedBeginning: recommendedBeginning,\n        favouritesFirst: favouritesFirst,\n        fallback: fallback,\n    };\n};\n\n/**\n * Given an object we want to add the content to the block and display it.\n *\n * @method buildBlock\n * @param {Promise} bodyPromise\n * @return {Object} The modal ready to display immediately and render bodyPromise in later.\n */\nconst buildBlock = (bodyPromise) => {\n    const pendingBlockPromise = new Pending();\n\n    let block = document.querySelector('.block_activity_chooser');\n    if (block) {\n        // Now we can actually display the content.\n        bodyPromise.then((html, js) => {\n            let content = block.querySelector('#block-activity-chooser-content');\n            content.innerHTML = html;\n\n            let options = block.querySelectorAll('.optioninfo a[data-action]');\n            options.forEach((option) => {\n                option.setAttribute('draggable', 'true');\n\n                option.addEventListener('drag', () => {\n                    option.classList.add('dragging');\n                });\n\n                option.addEventListener('dragend', () => {\n                    option.classList.remove('dragging');\n                });\n            });\n\n            let activities = document.querySelectorAll('.course-content .activity');\n            activities.forEach((activity) => {\n                activity.addEventListener('dragover', (e) => {\n                    let activeOption = block.querySelector('.optioninfo a.dragging');\n\n                    if (activeOption) {\n                        e.preventDefault();\n                        activity.classList.add('dd-drop-down');\n                    }\n                });\n\n                activity.addEventListener('dragleave', (e) => {\n                    let activeOption = block.querySelector('.optioninfo a.dragging');\n\n                    if (activeOption) {\n                        e.preventDefault();\n                        activity.classList.remove('dd-drop-down');\n                    }\n                });\n\n                activity.addEventListener('drop', (e) => {\n                    let activeOption = block.querySelector('.optioninfo a.dragging');\n\n                    if (activeOption) {\n                        e.preventDefault();\n\n                        let sectionId = activity.closest('.course-section').dataset.sectionid;\n\n                        let beforeMod = null;\n                        let nextActivity = activity.nextElementSibling;\n                        if (nextActivity) {\n                            beforeMod = nextActivity.dataset.id;\n                        }\n\n                        let url = activeOption.getAttribute('href') + '&section=' + sectionId + '&beforemod=' + beforeMod;\n                        window.location.href = url;\n                    }\n                });\n            });\n\n            if (js) {\n                Templates.runTemplateJS(js);\n            }\n        });\n    }\n\n    pendingBlockPromise.resolve();\n};\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Repository","Templates","_pending","initialized","_exports","init","async","courseId","chooserConfig","pendingPromise","Pending","fetchModuleData","innerPromise","Promise","resolve","activityModules","caller","document","querySelector","bodyPromiseResolver","bodyPromise","buildBlock","data","catch","errorTemplateData","errormessage","message","render","builtModuleData","sectionIdMapper","dataset","sectionid","templateDataBuilder","webServiceData","id","sectionreturnid","beforemod","newData","JSON","parse","stringify","content_items","forEach","module","link","activities","resources","showAll","showActivities","showResources","tabMode","parseInt","tabmode","favourites","filter","mod","favourite","recommended","indexOf","showActivitiesAndResources","archetype","recommendedBeginning","favouritesFirst","length","recommendedFirst","activitiesFirst","fallback","pendingBlockPromise","block","then","html","js","innerHTML","querySelectorAll","option","setAttribute","addEventListener","classList","add","remove","activity","preventDefault","activeOption","sectionId","closest","beforeMod","nextActivity","nextElementSibling","url","getAttribute","window","location","href","runTemplateJS"],"mappings":"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"}